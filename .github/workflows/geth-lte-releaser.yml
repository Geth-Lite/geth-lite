name: Geth-Lite release workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: |
          pwd
          ls -al
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Build
        run: go build -v ./...

  release:
    runs-on: ubuntu-latest
    steps:
      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get the previous release tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0)

          # Extract major, minor, and patch versions from the tag
          IFS='.' read -r -a VERSION_PARTS <<< "$PREVIOUS_TAG"
          MAJOR_VERSION="${VERSION_PARTS[0]}"
          MINOR_VERSION="${VERSION_PARTS[1]}"
          PATCH_VERSION="${VERSION_PARTS[2]}"

          # Increment the patch version
          PATCH_VERSION=$((PATCH_VERSION + 1))
          # Check if patch version exceeds 9, if so, reset to 0 and increment the minor version
          if [ "$PATCH_VERSION" -gt 9 ]; then
            PATCH_VERSION=0
            MINOR_VERSION=$((MINOR_VERSION + 1))
          fi

          # Check if minor version exceeds 9, if so, reset to 0 and increment the major version
          if [ "$MINOR_VERSION" -gt 9 ]; then
            MINOR_VERSION=0
            MAJOR_VERSION=$((MAJOR_VERSION + 1))
          fi

          # Form the next version tag
          NEXT_TAG="v$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION"
          echo "Next version tag: $NEXT_TAG"

          echo "::set-output name=next_tag::$NEXT_TAG"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.release_notes.outputs.next_tag }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false
